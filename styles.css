/* CSS - UNIVERSAL SELECTOR */

* {
  box-sizing: border-box; /* If you set box-sizing: border-box; on an element, padding and border are included in the width and height */
  margin: 0;
  }

/* CSS - STYLING THE HTML BODY ELEMENT */

body {
  margin: 0; /* Overwrite default margin */
  font-family: system-ui, sans-serif;
  color: black;
  background-color: white;
}

main {
  margin: 0;
}  
/* CSS - STYLING THE HTML NAV ELEMENT */

nav {
  /* This block defines the styling for the entire navigation bar. */
  display: flex; /* The navigation bar uses a flexbox layout, making it flexible and responsive.*/
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  padding-right: 4rem;
  gap: 0.5rem;
  
}

nav a {
  /* This block defines the styling for individual navigation links ("a" elements) inside the "nav".*/
  display: inline-block;
  min-width: 9rem;
  padding: 0.5rem;
  border-radius: 0.2rem;
  border: solid 1px #aaa;
  text-align: center;
  text-decoration: none;
  color: black;
  background-color:#CED6EB;
}

nav a[aria-current='page'] {
  /*This block targets specific links that represent the current page. */
  color: #000;
  background-color: #CED6EB;
}

.navbar {
  background-color:#F4F1F9;
  display: flex;
  justify-content: space-between;
  padding: 1.5rem;
}

h1 {
  font-weight: bold;
  font-size: 1.5rem;
}

/* CSS - STYLING THE HTML FOOTER ELEMENT */

footer {
  text-align: center;
  background-color:#F4F1F9;
  padding: 1.5rem;
  color: black;
}

/* CSS - STYLING HTML CLASSES */

.section_1 {
  background-color:#CED6EB;
  display: flex; /* This property turns the element into a flex container, allowing its direct children (flex items) to be arranged according to the rules of the flexbox model. */
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding-top: 4rem;
  padding-bottom: 2rem;
}

.section_2 {
  background-color:#DEEFF8;
  display: flex; /* This property turns the element into a flex container, allowing its direct children (flex items) to be arranged according to the rules of the flexbox model. */
  justify-content: center; /* The value center means that the items will be centered within the flex container. */
  flex-direction: column; /* This property specifies the direction of the flex items (the children of the container). By setting it to column, the items will be arranged vertically (one below the other) instead of the default horizontal arrangement (left to right). */
  align-items: center; /* The value center means that the items will be centered horizontally within the flex container. */ 
  padding-left: 16rem;
  padding-right: 16rem;
  padding-top: 3rem;
  padding-bottom: 3rem;
   
}

.section_3 {
  background-color:#CED6EB;
  display: flex; /* This property turns the element into a flex container, allowing its direct children (flex items) to be arranged according to the rules of the flexbox model. */
  justify-content: center; /* The value center means that the items will be centered within the flex container. */
  flex-direction: column; /* This property specifies the direction of the flex items (the children of the container). By setting it to column, the items will be arranged vertically (one below the other) instead of the default horizontal arrangement (left to right). */
  align-items: center; /* The value center means that the items will be centered horizontally within the flex container. */ 
  padding-left: 16rem;
  padding-right: 16rem;
  padding-top: 3rem;
  padding-bottom: 3rem;
  
}


.section_4{
  background-color:#DEEFF8;
  display: flex; /* This property turns the element into a flex container, allowing its direct children (flex items) to be arranged according to the rules of the flexbox model. */
  justify-content: center; /* The value center means that the items will be centered within the flex container. */
  flex-direction: column; /* This property specifies the direction of the flex items (the children of the container). By setting it to column, the items will be arranged vertically (one below the other) instead of the default horizontal arrangement (left to right). */
  align-items: center; /* The value center means that the items will be centered horizontally within the flex container. */ 
  padding-left: 16rem;
  padding-right: 16rem;
  padding-top: 3rem;
  padding-bottom: 3rem;
}

.image-container {
  display: flex;  /* Flexbox for horizontal layout */
  justify-content: center;  /* Center the images */
  gap: 1rem;  /* Add some space between images */
  margin-top: 3rem;
  margin-bottom: 3rem;
}